{"version":3,"sources":["webpack:///webpack/bootstrap da69014fed5e3fb0c03a","webpack:///./src/server/index.js","webpack:///external \"express\"","webpack:///external \"body-parser\"","webpack:///external \"morgan\"","webpack:///external \"helmet\"","webpack:///external \"path\"","webpack:///external \"compression\"","webpack:///./src/server/middleware/index.js","webpack:///./src/server/middleware/getCustomersHandler.js","webpack:///./src/server/dataservices/queryservice.js","webpack:///external \"babel-runtime/core-js/promise\"","webpack:///external \"mongodb\"","webpack:///./src/server/dataservices/dbpromise.js","webpack:///./src/server/config/index.js","webpack:///./src/server/middleware/getCustomerByIdHandler.js"],"names":["app","use","set","staticDir","join","process","cwd","console","log","level","static","noCache","urlencoded","extended","json","get","server","listen","port","address","getCustomersHandler","getCustomerByIdHandler","req","res","undefined","Name","_id","then","dataa","catch","error","defaultCollation","strength","caseLevel","getDocuments","collectionName","filter","limit","skip","sort","project","resolve","reject","db","Error","database","listCollections","name","toArray","collections","length","collection","find","collation","cursor","data","getDocumentById","id","docs","getDb","connect","mongodburl","closeDb","close","config","customerId","params","status","send"],"mappings":"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","file":"./build/server/server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap da69014fed5e3fb0c03a","import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport morgan from 'morgan';\r\nimport helmet from 'helmet';\r\nimport path from 'path';\r\nimport compression from 'compression';\r\n\r\nimport { getCustomersHandler } from \"./middleware\";\r\nimport {getCustomerByIdHandler} from \"./middleware\";\r\n\r\nimport {closeDb} from \"./dataservices/dbpromise\";\r\n\r\n//(()=>{\r\n//    let docs1 = getDocuments(`customers`, {Name: /^ł/i }, undefined, undefined, { Name: 1 }, {_id: 1, Name: 1}); \r\n//    let docs2 = getDocuments(`customers`, {Name: /^ż/i }, undefined, undefined, { Name: 1 }, {_id: 1, Name: 1});\r\n//\r\n//    Promise.all([docs1, docs2])\r\n//    .then((dataa) => {\r\n//        console.log(`Got Data`);\r\n//\r\n//        dataa.forEach((data)=>{\r\n//            data.forEach((element) => {\r\n//                console.log(element);\r\n//            });\r\n//        });\r\n//        return getDocumentById(`customers`,`58482575fc13ae13f9000256`);\r\n//    }).then((doc)=>{\r\n//        console.log(doc);\r\n//    }).then(()=>{\r\n//        closeDb();\r\n//    }).catch((error) => {\r\n//        console.log(`Error`);\r\n//        console.log(error);\r\n//        closeDb();\r\n//    });\r\n//})();\r\n\r\n\r\nlet app = express();\r\napp.use(morgan(`combined`));\r\n\r\n// Define the port to run on\r\napp.set(`port`, 80);\r\napp.set(`ip`, `0.0.0.0`);\r\n\r\n// define static paths\r\nlet staticDir = path.join(process.cwd(), `build/client`);\r\nconsole.log(`Static dir is: ${staticDir}`);\r\napp.use(`/`, helmet());\r\napp.use(`/`, compression({level: 9}));\r\napp.use(`/`, express.static(staticDir));\r\n\r\n// define /api API\r\n// configure app to use bodyParser()\r\n// this will let us get the data from a POST\r\napp.use(`/api`, helmet({noCache: true}));\r\napp.use(`/api`, compression({level: 6}));\r\napp.use(`/api`, bodyParser.urlencoded({ extended: true }));\r\napp.use(`/api`, bodyParser.json());\r\n\r\napp.get(`/api/mycustomers`, getCustomersHandler);\r\napp.get(`/api/mycustomers/:id`, getCustomerByIdHandler);\r\n\r\n// Listen for requests\r\nvar server = app.listen(app.get(`port`), app.get(`ip`), function() {\r\n  var port = server.address().port;\r\n  console.log(`Listening on port ` + port);\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/index.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"helmet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"helmet\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"compression\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"compression\"\n// module id = 6\n// module chunks = 0","export {getCustomersHandler}  from './getCustomersHandler';\r\nexport {getCustomerByIdHandler} from \"./getCustomerByIdHandler\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/middleware/index.js","import {getDocuments} from '../dataservices/queryservice';\r\n\r\nexport const getCustomersHandler = (req, res) => {\r\n    try {\r\n        getDocuments(`customers`, undefined, undefined, undefined, { Name: 1 }, {_id: 1, Name: 1}) \r\n        .then((dataa) => {\r\n            res.json(dataa);\r\n        }).catch((error) => {\r\n            res.json({error});\r\n    });\r\n    } catch (error) {\r\n        res.json({error});\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/middleware/getCustomersHandler.js","import {\r\n    ObjectID\r\n} from 'mongodb';\r\n\r\nimport dbpromise from \"./dbpromise\";\r\n\r\nexport const defaultCollation = {\r\n    'locale': `pl`,\r\n    strength: 2,\r\n    caseLevel: false\r\n};\r\n\r\nexport const getDocuments = (collectionName, filter, limit, skip, sort, project) => {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let db;\r\n\r\n            if (!collectionName || collectionName === ``) {\r\n                throw new Error(`collectionName not specified`);\r\n            }\r\n\r\n            dbpromise.then((database)=>{\r\n                if (!database) {\r\n                    throw new Error(`Not connected to the Mongodb`);\r\n                }\r\n                db = database;\r\n                return db.listCollections({\r\n                    name: collectionName\r\n                }).toArray();\r\n            }).then((collections) => {\r\n                if (collections.length !== 1) {\r\n                    throw new Error(`Collection ${collectionName} doesn't exist`);\r\n                }\r\n                return db.collection(collectionName);\r\n            }).then((collection) => {\r\n                return collection.find(filter || {}, undefined, {\r\n                    collation: defaultCollation\r\n                });\r\n            }).then((cursor) => {\r\n                return cursor;\r\n            }).then((cursor) => {\r\n                if (limit) cursor = cursor.limit(limit);\r\n                return cursor;\r\n            }).then((cursor) => {\r\n                if (skip) cursor = cursor.skip(skip);\r\n                return cursor;\r\n            }).then((cursor) => {\r\n                if (project) cursor = cursor.project(project);\r\n                return cursor;\r\n            }).then((cursor) => {\r\n                if (sort) cursor = cursor.sort(sort, undefined, {\r\n                    collation: defaultCollation\r\n                });\r\n                return cursor;\r\n            }).then((cursor) => {\r\n                let data = cursor.toArray();\r\n                return data;\r\n            }).then((data) => {\r\n                resolve(data);\r\n            }).catch((error) => {\r\n                reject(error);\r\n            });\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n};\r\n\r\nexport const getDocumentById = (collectionName, id) => {\r\n    return new Promise((resolve, reject)=>{\r\n        try {\r\n            if(!id || id===``){\r\n                throw new Error(`The id parameter is mandatory`);\r\n            }\r\n            getDocuments(collectionName, {_id: new ObjectID(id)})\r\n            .then((docs)=>{\r\n                if(docs && docs.length === 1){\r\n                    resolve(docs[0]);\r\n                } else {\r\n                    reject(new Error(`The document wuth id: ${id} doesn't exist`));\r\n                }\r\n            }).catch((error)=>{\r\n                reject(error);\r\n            });\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/dataservices/queryservice.js","module.exports = require(\"babel-runtime/core-js/promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/promise\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"mongodb\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongodb\"\n// module id = 11\n// module chunks = 0","import { MongoClient } from 'mongodb';\r\nimport config from \"../config\";\r\n\r\n\r\nconst getDb = () => {\r\n    return new Promise((resolve, reject)=>{\r\n        try {\r\n            resolve(MongoClient.connect(config.mongodburl));\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n};\r\n\r\nconst db = getDb();\r\n\r\nexport const closeDb = () => {\r\n    db.then((database)=>{\r\n        if(database){\r\n            database.close();\r\n        }\r\n    });\r\n};\r\n\r\nexport default db;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/dataservices/dbpromise.js","const config = {\r\n    mongodburl: `mongodb://localhost:27017/Maryensztadt`\r\n};\r\n\r\nexport default config;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/config/index.js","import {getDocumentById} from '../dataservices/queryservice';\r\n\r\nexport const getCustomerByIdHandler = (req, res) => {\r\n    try {\r\n        let customerId = req.params.id;\r\n        console.log(`Id is: ${customerId}`);\r\n\r\n        getDocumentById(`customers`, customerId) \r\n        .then((data) => {\r\n            if(data){\r\n                res.json(data);\r\n            } else {\r\n                res.status(404).send(`Not Found`);//404 Not Found\r\n            }\r\n        }).catch((error) => {\r\n            res.status(500).send(`Internal Server Error: ${error}`);//500 Internal Server Error\r\n    });\r\n    } catch (error) {\r\n        res.status(500).send(`Internal Server Error: ${error}`);//500 Internal Server Error\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/middleware/getCustomerByIdHandler.js"],"sourceRoot":""}