{"version":3,"sources":["webpack:///webpack/bootstrap c0d19dcfb04f89aa4cba","webpack:///./src/server/index.js","webpack:///external \"babel-runtime/core-js/promise\"","webpack:///./src/server/dataservices/queryservice.js","webpack:///external \"mongodb\"","webpack:///./src/server/dataservices/dbpromise.js","webpack:///./src/server/config/index.js"],"names":["console","log","docs1","Name","undefined","_id","docs2","all","then","dataa","forEach","data","element","doc","catch","error","defaultCollation","strength","caseLevel","getDocuments","collectionName","filter","limit","skip","sort","project","resolve","reject","db","Error","database","listCollections","name","toArray","collections","length","collection","find","collation","cursor","getDocumentById","id","docs","getDb","connect","mongodburl","closeDb","close","config"],"mappings":"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","file":"./build/server/server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c0d19dcfb04f89aa4cba","import {getDocuments, getDocumentById} from './dataservices/queryservice';\r\nimport {closeDb} from \"./dataservices/dbpromise\";\r\n\r\nconsole.log(`It's alive`);\r\n\r\n(()=>{\r\n    let docs1 = getDocuments(`customers`, {Name: /^ł/i }, undefined, undefined, { Name: 1 }, {_id: 1, Name: 1}); \r\n    let docs2 = getDocuments(`customers`, {Name: /^ż/i }, undefined, undefined, { Name: 1 }, {_id: 1, Name: 1});\r\n\r\n    Promise.all([docs1, docs2])\r\n    .then((dataa) => {\r\n        console.log(`Got Data`);\r\n\r\n        dataa.forEach((data)=>{\r\n            data.forEach((element) => {\r\n                console.log(element);\r\n            });\r\n        });\r\n        return getDocumentById(`customers`,`58482575fc13ae13f9000256`);\r\n    }).then((doc)=>{\r\n        console.log(doc);\r\n    }).then(()=>{\r\n        closeDb();\r\n    }).catch((error) => {\r\n        console.log(`Error`);\r\n        console.log(error);\r\n        closeDb();\r\n    });\r\n})();\r\n\r\nconsole.log(`It's dead`);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/index.js","module.exports = require(\"babel-runtime/core-js/promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/promise\"\n// module id = 1\n// module chunks = 0","import {\r\n    ObjectID\r\n} from 'mongodb';\r\n\r\nimport dbpromise from \"./dbpromise\";\r\n\r\nexport const defaultCollation = {\r\n    'locale': `pl`,\r\n    strength: 2,\r\n    caseLevel: false\r\n};\r\n\r\nexport const getDocuments = (collectionName, filter, limit, skip, sort, project) => {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let db;\r\n\r\n            if (!collectionName || collectionName === ``) {\r\n                throw new Error(`collectionName not specified`);\r\n            }\r\n\r\n            dbpromise.then((database)=>{\r\n                if (!database) {\r\n                    throw new Error(`Not connected to the Mongodb`);\r\n                }\r\n                db = database;\r\n                return db.listCollections({\r\n                    name: collectionName\r\n                }).toArray();\r\n            }).then((collections) => {\r\n                if (collections.length !== 1) {\r\n                    throw new Error(`Collection ${collectionName} doesn't exist`);\r\n                }\r\n                return db.collection(collectionName);\r\n            }).then((collection) => {\r\n                return collection.find(filter || {}, undefined, {\r\n                    collation: defaultCollation\r\n                });\r\n            }).then((cursor) => {\r\n                return cursor;\r\n            }).then((cursor) => {\r\n                if (limit) cursor = cursor.limit(limit);\r\n                return cursor;\r\n            }).then((cursor) => {\r\n                if (skip) cursor = cursor.skip(skip);\r\n                return cursor;\r\n            }).then((cursor) => {\r\n                if (project) cursor = cursor.project(project);\r\n                return cursor;\r\n            }).then((cursor) => {\r\n                if (sort) cursor = cursor.sort(sort, undefined, {\r\n                    collation: defaultCollation\r\n                });\r\n                return cursor;\r\n            }).then((cursor) => {\r\n                let data = cursor.toArray();\r\n                return data;\r\n            }).then((data) => {\r\n                resolve(data);\r\n            }).catch((error) => {\r\n                reject(error);\r\n            });\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n};\r\n\r\nexport const getDocumentById = (collectionName, id) => {\r\n    return new Promise((resolve, reject)=>{\r\n        try {\r\n            if(!id || id===``){\r\n                throw new Error(`The id parameter is mandatory`);\r\n            }\r\n            getDocuments(collectionName, {_id: new ObjectID(id)})\r\n            .then((docs)=>{\r\n                if(docs && docs.length === 1){\r\n                    resolve(docs[0]);\r\n                } else {\r\n                    reject(new Error(`The document wuth id: ${id} doesn't exist`));\r\n                }\r\n            }).catch((error)=>{\r\n                reject(error);\r\n            });\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/dataservices/queryservice.js","module.exports = require(\"mongodb\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongodb\"\n// module id = 3\n// module chunks = 0","import { MongoClient } from 'mongodb';\r\nimport config from \"../config\";\r\n\r\n\r\nconst getDb = () => {\r\n    return new Promise((resolve, reject)=>{\r\n        try {\r\n            resolve(MongoClient.connect(config.mongodburl));\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n};\r\n\r\nconst db = getDb();\r\n\r\nexport const closeDb = () => {\r\n    db.then((database)=>{\r\n        if(database){\r\n            database.close();\r\n        }\r\n    });\r\n};\r\n\r\nexport default db;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/dataservices/dbpromise.js","const config = {\r\n    mongodburl: `mongodb://localhost:27017/Maryensztadt`\r\n};\r\n\r\nexport default config;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/config/index.js"],"sourceRoot":""}